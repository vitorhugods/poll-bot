name: Release Pipeline

on:
  release:
    types: published

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set envs
        # use latest tag as release version
        run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF:10}

      - name: Build and publish docker image
        uses: docker/build-push-action@v1
        with:
          # login to repo
          repository: lukaswire/polls
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          # pass release_version
          build_args: release_version=${{ env.RELEASE_VERSION }}
          # tag the image with latest git tag
          tag_with_ref: true
          # add labels based on the build - see https://github.com/opencontainers/image-spec/blob/master/annotations.md
          add_git_labels: true
          # push only if this is tagged release
          push: ${{ startsWith(github.ref, 'refs/tags/') }}

      # Checkout our Kubernetes configuration
      - name: Checkout Rubicon
        uses: actions/checkout@v2
        with:
          repository: zinfra/rubicon
          # currently main branch is develop
          ref: develop
          path: rubicon
          # private repo so use different git token
          token: ${{ secrets.RUBICON_GIT_TOKEN }}

      # Update version to the one that was just built
      - name: Change version
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
        run: |-
          cd rubicon/prod/services/poll
          sed -i".bak" "s/image: lukaswire\/polls.*/image: lukaswire\/polls:$RELEASE_VERSION/g" poll.yaml
          rm poll.yaml.bak

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '286.0.0'
          service_account_email: ${{ secrets.GKE_SA_EMAIL }}
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool
      - name: Configure Docker Google cloud
        run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - name: Obtain k8s credentials
        env:
          GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
          GKE_ZONE: ${{ secrets.GKE_ZONE }}
        run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      # K8s is set up, deploy the app
      - name: Deploy
        run: |-
          kubectl apply -f rubicon/prod/services/poll/poll.yaml

      # Commit all data to Rubicon and open PR
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v2
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
        with:
          path: rubicon
          branch: poll-bot-release
          token: ${{ secrets.RUBICON_GIT_TOKEN }}
          title: "Poll Bot Release"
          commit-message: "Poll Bot version bump"
          body: "Poll Bot Release"

      # Send webhook to Wire using Slack Bot
      - name: Webhook to Wire
        uses: 8398a7/action-slack@v2
        with:
          status: ${{ job.status }}
          author_name: Poll Bot Release Pipeline
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.WEBHOOK_RELEASE }}
        # Notify every release
        if: always()
